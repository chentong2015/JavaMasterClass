何为性能调优 ?
1. 根据项目需求进行JVM规划和预调优
2. JVM虚拟机调优是为了减少GC，特别是Full GC造成的程序的卡顿
3. 解决JVM运行过程中出现的问题(OOM)等

性能调优的解决方面
1. 基础性能  : 硬件层级或者操作系统层级的升级优化
2. 数据库性能: 事务拆分，索引调优，SQL优化，NoSQL引入
3. 应用架构  : 引入分布式策略，计算和存储进行水平化，包括提前计算预处理
4. 业务层面  : 业务上进行规避或者调整

常见问题：
1. 开启指针压缩的情况下，一个oop能表示的最大堆空间的大小? (使用指针来引用堆空间的大小)
   32bits(4个字节) + 3bits(使用的时候补齐000) = 2^35 = 32G => 堆空间有可能不够
2. 任何扩容，使得oop表示更大堆空间?
   增大对齐字节数，使用的时候增加补齐的bit位数
3. 为什么不是16字节对齐?
   防止padding补太多，造成的内存浪费
4. 为什么要保证对象是8个字节的整数倍 ?
   从计算机内部的寻址上考虑，补齐完整的"8个字节整数倍"更有利于寻址的高效，避免过多的计算地址偏移量