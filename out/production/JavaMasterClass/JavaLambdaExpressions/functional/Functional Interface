TODO. Functional Interface优先于Lambda; 一共五种方法引用:
1. 调静态方法   Integer::parseInt
2. 调非静态     String::isLowerCase
3. 有限制       Instance.now()::isAfter()
4. 类构造器     TreeMap<K,V>::new
5. 数组构造器   int[]::new

------------------------------------------------------------
TODO. 使用来自Java原生类库中的标准函数接口 java.util.function
Consumer<T> 消费者，有输入没有输出 > void accept(T t); --> Can chain
  BiConsumer                     > void accept(T t, U u);

Supplier<T> 提供者，没有输入有输出 > T get();

Function<T,R> 参数和返回值不一致  > R apply(T t);     --> Can chain
  BiFunction                   > R apply(T t, U u);

UnaryOperator<T> extends Function<T, T> 输入输出参数的类型一致性

Predicate<T> 提供参数，返回boolean结果
  boolean JavaUnitTestExceptions.test(T t);   --> Can chain
BiPredicate
  boolean JavaUnitTestExceptions.test(T t, U u);