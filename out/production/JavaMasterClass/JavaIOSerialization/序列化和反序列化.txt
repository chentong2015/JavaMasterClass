Serialization 序列化：对象和字节流之间的转换
TODO. 序列化是危险的，考虑使用跨平台的结构化数据表示(JSON，protobuf)

1. 将数据结构或者Object转换成可以被存储的格式(Stream流)的过程被称为是序列化
   When write an object to a file, it has to be translated to a format that can be stored to a file, and read it later

2. 类型必须是可以序列化的 implements Serializable
   Serializable接口没有方法，目的只是为了给JVM一个标识，标识这个类型"可能"被序列化然后再读取处理

   private long serialVersionUID;
   如果不是自定义，将会被赋予一个默认值，编译器会根据类名称，所实现的接口名称，成员名称来生成标识符，兼容性遭到破坏
   - 不同编译器序列化效果不同
   - 当反序列化时runtime验证serialVersionUID可能会出现不一致
   - 在不同的compiler之间可能存在差异: Standard Oracle Compiler for Desktop APP & Android

3. 类型中的所有的field都必须是可序列化
   Fields in a Serializable class must themselves be either Serializable or transient
   even if the class is never explicitly serialized or deserialized.

4. 将同一个对象序列化两次到一个文件中，文件中之后存储"一次"对象的序列化结果

5. 如果子类是序列化的，父类是非序列化的，则父类必须包含有无参构造器
   The non-serializable super class of a "Serializable" class should have a no-argument constructor