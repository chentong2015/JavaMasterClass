Java配置环境变量，配置后重启IDEA刷新版本
https://www.runoob.com/w3cnote/windows10-java-setup.html

基本操作: 终端 & 命令提示符运行
> javac HelloWorld.java 编辑源代码，生成HelloWorld.class中间代码
> java HelloWorld 运行程序

Java主要的版本号信息
major version number of the class file format being used.
Java SE 18 = 62 (0x3E hex),
Java SE 17 = 61 (0x3D hex),
Java SE 16 = 60 (0x3C hex),
Java SE 15 = 59 (0x3B hex),
Java SE 14 = 58 (0x3A hex),
Java SE 13 = 57 (0x39 hex),
Java SE 12 = 56 (0x38 hex),
Java SE 11 = 55 (0x37 hex),
Java SE 10 = 54 (0x36 hex),[4]
Java SE 9 = 53 (0x35 hex),[5]
Java SE 8 = 52 (0x34 hex),
Java SE 7 = 51 (0x33 hex),
Java SE 6.0 = 50 (0x32 hex),
Java SE 5.0 = 49 (0x31 hex),
JDK 1.4 = 48 (0x30 hex),
JDK 1.3 = 47 (0x2F hex),
JDK 1.2 = 46 (0x2E hex),
JDK 1.1 = 45 (0x2D hex).

如何在没有装JRE的操作系统(用户PC)上运行Java程序 ?
https://github.com/libgdx/libgdx/wiki/Bundling-a-JRE
1. 下载jre或者jdk进行安装
2. 使用launch4j工具生成.exe可执行文件，静态绑定指定路径的jdk，整体打包
3. 配置生成self-container的应用程序

Java配置文件随着程序一起发布
  当项目构建成功之后，/resources目录下的文件会被自动打包到/target/中，程序对资源进行加载和读取
  创建resource文件夹，并标记成Resources，在资源访问时需要添加resources文件夹路径
  普通Java项目，当使用File System文件系统来进行访问时
  1. Projects Settings > Modules > ProjectName > Sources       ->  src蓝色的sources中的源文件将会被javac编译
  2. Projects Settings > Modules > ProjectName > Tests         ->  执行单元测试时，绿色的文件夹中的才会被编译
  3. Projects Settings > Modules > ProjectName > Resources     ->  随着编译，生成(copy)到结果中的资源文件, 但是不会被编译处理
  4. Projects Settings > Modules > ProjectName > Test Resources -> 只针对测试所用的资源
  5. Projects Settings > Modules > ProjectName > Excluded       -> 编译生成后的文件夹 /out /target
