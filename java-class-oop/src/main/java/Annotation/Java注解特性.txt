TODO: 为代码添加注解来实现特殊功能
这种可扩展的元数据信息能够通过"反射"在运行时动态改变程序的行为
Java源生API中提供的预定义好的注解类型
1. @Deprecated 表明已经废弃
2. @Override
3. @SuppressWarnings 告诉编译器抑制特定警告
4. @FunctionalInterface 提供丰富的lambda表达式的使用场景

TODO: 作用到别的注解上的元注释Meta-annotations
1. @Retention 什么注解的存储(保留策略)
   @Retention(RetentionPolicy.RUNTIME) 注解被JVM保留, 能在runtime运行时通过反射来判断注解的存在
2. @Documented 标明将注解记录进javadoc
3. @Target({ElementType.ANNOTATION_TYPE, ElementType.METHOD})
4. @Inherited  标明该注解类型可以从class的super class上查找
     The user queries the annotation type on a class declaration,
     and the class declaration has no annotation for this type,
     then the class's superclass will automatically be queried for the annotation type
5. @Repeatable 标明注解可在target上使用多次