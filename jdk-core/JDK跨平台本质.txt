TODO: 定义一种语言规范(语法)，构建编译器把语言语法编译成class文件规范，运行在JVM
由于硬件和指令级的区别，同一个Java源代码在不同平台生成的二进制码不同
1. 跨平台的本质: 汇编语言的不同 ==> 一种系统上的程序不能扩平台运行
   实现跨平台方式:
   编程语言方式: C, C++编译成指定OS平台的语言
   虚拟机方式: java通过JVM底层OS的区别(硬件和指令集)

2. 为什么很多语言选择在JVM上面运行?
   Java, Kotlin, Groovy, Scala, JRuby, Jython, Fantom, Clojure, Rhino, Ceylon
   优秀的内存管理: 内存模型
   精简的字节码指令(255字节码指令，一个指令占一个字节)
   高效的执行引擎
   安全可扩展的类加载器系统
   高性能
   低延迟的垃圾收集器

源码使用C++实现，和OS操作系统进行交互，调用底层开放的上层接口
1. Oracle JDK: 11支持到2026-09
2. Redhat OpenJDK(企业选择): 11支持到2024-10
   OpenJDK 虚拟机: 默认Hotspot