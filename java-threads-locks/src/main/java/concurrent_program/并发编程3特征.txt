TODO. Atomicity 原子性
原子性的操作：lock, unlock, read, load, assign, use, store, write
1. 基本的数据访问和读写是具备原子性, 除了long和double
2. 使用synchronized来实现更大规模的原子性保证，对应更高层次的字节码指令monitor enter, monitor exit

TODO. Visibility 可见性
Java的内存模型如何实现可见性 ?
1. Java内存模型会将会将在工作内存中变量修改的后的新值写回到主内存
2. 在变量读取前从主内存中刷新变量值，通过依赖主内存这个媒介来实现可见性
   2.1 volatile保证立即同步回，保证"可见性"，普通变量无法保证
   2.2 synchronized也能实现可见性，"在unlock之前，必须将变量同步回主内存"
   2.3 final修改，在初始化之后不可更改，保证其他线程正确访问

TODO. Ordering 有序性
1. volatile可以保证有序性
2. synchronized确保一个变量在同一个时刻只允许一条线程对其进行lock，保证同步快的串行进入