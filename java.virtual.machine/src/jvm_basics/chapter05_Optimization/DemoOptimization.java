package jvm_basics.chapter05_Optimization;

// 性能问题来源:
// 1. 典型的性能问题  : 页面响应慢、接口超时，服务器负载高、并发数低，数据库频繁死锁
// 2. Java性能的瓶颈 : 磁盘、内存、网络 I/O
// 3. 性能优化分层模型: 应用层、数据库层、框架层、JVM层

// 性能调优的解决方面
// 1. 基础性能  : 硬件层级或者操作系统层级的升级优化
// 2. 数据库性能: 事务拆分，索引调优，SQL 优化，NoSQL 引入
// 3. 应用架构  : 引入分布式策略，计算和存储进行水平化，包括提前计算预处理
// 4. 业务层面  : 业务上进行规避或者调整
public class DemoOptimization {

    // 基本Linux操作指令
    // > top 命令可以查看系统平均负载和CPU使用率
    // > free –m 命令查看内存的使用情况
    // > iostat可以查看磁盘的读写情况
}
